class Pair{
    int val;
    int count;
    Pair(int val,int count){
        this.val = val;
        this.count = count;
    }
}
class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        int ans[] = new int[k];
        HashMap<Integer,Integer> hm = new HashMap<>();
        PriorityQueue<Pair> pq = new PriorityQueue<Pair>((a,b)->b.count-a.count);
        for(int i=0;i<nums.length;i++){
            hm.put(nums[i],hm.getOrDefault(nums[i],0)+1);
        }
        for(Map.Entry<Integer,Integer> map:hm.entrySet()){
            pq.offer(new Pair(map.getKey(),map.getValue()));
        }
        for(int i=0;i<k;i++){
            ans[i] = pq.poll().val;
        }
        return ans;
    }
}