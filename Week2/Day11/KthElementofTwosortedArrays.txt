class Solution {
    public long kthElement( int arr1[], int arr2[], int n, int m, int k) {
        if(m<n){
            return kthElement(arr2,arr1,m,n,k);
        }
        int l = Math.max(0,k-m);
        int r = Math.min(n,k);
        if(l<=r){
            int cut1 = (l+r)/2;
            int cut2 = k-cut1;
            int l1 = cut1 == 0?Integer.MIN_VALUE:arr1[cut1-1];
            int l2 = cut2 == 0?Integer.MIN_VALUE:arr2[cut2-1];
            int r1 = cut1 == n?Integer.MAX_VALUE:arr1[cut1];
            int r2 = cut2 == m?Integer.MAX_VALUE:arr2[cut2];
            if(l1<=r2 && l2<=r1){
                return Math.max(l1,l2);
            }else if(l1 > r2){
                r = cut1-1;
            }else{
                l = cut1+1;
            }
        }
        // if(k>=1 && k<=(n+m)){
        //     return arr1[0]<arr2[0]?arr1[k-1]:arr2[k-1];
        // }else{
            return -1;
        // }
    }
}