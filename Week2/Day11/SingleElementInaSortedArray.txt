class Solution {
    int bs(int arr[],int n){
        int l = 0;
        int r = n-1;
        if(n == 1 || arr[0] != arr[1]){
            return arr[0];
        }
        if(arr[r]!=arr[r-1]){
            return arr[r];
        }
        while(l<=r){
            int mid = l+(r-l)/2;
            if(arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]){
                return arr[mid];
            }
            if(mid%2==1){
                if(arr[mid] == arr[mid-1]){
                    l = mid+1;
                }else{
                    r = mid-1;
                }
            }else{
                if(arr[mid-1] == arr[mid]){
                    r = mid-1;
                }else{
                    l = mid+1;
                }
            }
        }
        return 0;
    }
    public int singleNonDuplicate(int[] nums) {
        return bs(nums,nums.length);
    }
}